/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_SENSOR_PB_H_INCLUDED
#define PB_SENSOR_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SensorData {
    char UI[16];
    int32_t time;
    pb_size_t measurements_count;
    float measurements[5];
} SensorData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SensorData_init_default                  {"", 0, 0, {0, 0, 0, 0, 0}}
#define SensorData_init_zero                     {"", 0, 0, {0, 0, 0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define SensorData_UI_tag                        1
#define SensorData_time_tag                      2
#define SensorData_measurements_tag              3

/* Struct field encoding specification for nanopb */
#define SensorData_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, STRING,   UI,                1) \
X(a, STATIC,   REQUIRED, INT32,    time,              2) \
X(a, STATIC,   REPEATED, FLOAT,    measurements,      3)
#define SensorData_CALLBACK NULL
#define SensorData_DEFAULT NULL

extern const pb_msgdesc_t SensorData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SensorData_fields &SensorData_msg

/* Maximum encoded size of messages (where known) */
#define SENSOR_PB_H_MAX_SIZE                     SensorData_size
#define SensorData_size                          53

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
