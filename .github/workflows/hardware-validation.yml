name: Hardware Validation

on:
  push:
    paths:
      - 'hardware/**'
      - '.github/workflows/hardware-validation.yml'
  pull_request:
    paths:
      - 'hardware/**'
      - '.github/workflows/hardware-validation.yml'

jobs:
  arduino-compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arduino-version: ['2.3.3']
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1
        
      - name: Install Arduino core for MKR WAN 1310
        run: |
          arduino-cli core update-index
          arduino-cli core install arduino:samd
          
      - name: Install required libraries
        run: |
          arduino-cli lib install "LoRa"
          arduino-cli lib install "RTCZero"
          arduino-cli lib install "SD"
          arduino-cli lib install "OneWire"
          arduino-cli lib install "DallasTemperature"
          arduino-cli lib install "ArduinoLowPower"
          arduino-cli lib install "MKRWAN"
          
      - name: Compile temperature sensor
        run: |
          cd hardware/sensors/temperature/Sensor
          arduino-cli compile --fqbn arduino:samd:mkrwan1310 Sensor.ino
          
      - name: Compile relay
        run: |
          cd hardware/relay/Relay
          arduino-cli compile --fqbn arduino:samd:mkrwan1310 Relay.ino
          
      - name: Compile demo sensor
        run: |
          cd hardware/sensors/demo/Sensor_demo
          arduino-cli compile --fqbn arduino:samd:mkrwan1310 Sensor_demo.ino
          
  hardware-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1
        
      - name: Install Arduino core
        run: |
          arduino-cli core update-index
          arduino-cli core install arduino:samd
          
      - name: Install required libraries
        run: |
          arduino-cli lib install "LoRa"
          arduino-cli lib install "RTCZero"
          arduino-cli lib install "ArduinoLowPower"
          arduino-cli lib install "MKRWAN"
          
      - name: Compile hardware tests
        run: |
          cd hardware/tests
          find . -name "*.ino" -path "*/testArduino*" -exec dirname {} \; | sort -u | while read dir; do
            echo "Compiling test in $dir"
            cd "$dir"
            test_file=$(find . -maxdepth 1 -name "*.ino" | head -1)
            if [ -n "$test_file" ]; then
              arduino-cli compile --fqbn arduino:samd:mkrwan1310 "$test_file" || echo "Warning: Failed to compile $test_file"
            fi
            cd - > /dev/null
          done
          
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Check code formatting
        run: |
          # Check for common Arduino code issues
          echo "Checking Arduino code style..."
          
          # Check for proper header guards in .hpp files
          find hardware/shared -name "*.hpp" -exec grep -L "#ifndef\|#pragma once" {} \; | while read file; do
            echo "Warning: $file missing header guard"
          done
          
          # Check for consistent include paths
          echo "Checking include paths..."
          grep -r "#include.*internals" hardware/sensors/ hardware/relay/ || echo "All includes use shared libraries correctly"
          
      - name: Check documentation
        run: |
          echo "Checking documentation..."
          # Verify all main Arduino files have proper headers
          find hardware/sensors hardware/relay -name "*.ino" -exec head -n 20 {} \; | grep -q "Functionalities" && echo "Documentation check passed"